# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

stages: # List of stages for jobs, and their order of execution
    - static_analysis
    - test
    - pdf

compile_pdf:
    stage: pdf
    needs: []
    image: aergus/latex
    rules:
        - changes:
              - report/**/*
    script:
        - cd report
        - latexmk -pdf -file-line-error -interaction=nonstopmode -r "glossaries.latexmk" report.tex
        - mv report.pdf ../report.pdf
    artifacts:
        paths:
            - report.pdf

unit-test-backend:
    image: weiiswurst/python-zeroc-ice
    stage: test
    rules:
        - if: $CI_PIPELINE_SOURCE == "push"
          when: always
        - if: $CI_PIPELINE_SOURCE == "merge_request_event"
          when: never
    script:
        - cd backend
        - python --version
        - pip install -r requirements.txt
        - coverage run -m pytest --junitxml=report.xml test/**.py
        - coverage report
        - coverage xml
        - mv report.xml ../report.xml
        - mv coverage.xml ../coverage.xml
    coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
    artifacts:
        when: always
        reports:
            junit: report.xml
            coverage_report:
                coverage_format: cobertura
                path: coverage.xml

unit-test-frontend:
    image: node:latest
    stage: test
    rules:
        - if: $CI_PIPELINE_SOURCE == "push"
          when: always
        - if: $CI_PIPELINE_SOURCE == "merge_request_event"
          when: never
    script:
        - cd frontend
        - npm install --legacy-peer-deps
        - npm run test:ci
        - mv junit.xml ../junit.xml
    coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
    artifacts:
        paths:
            - coverage/
        when: always
        reports:
            junit:
                - junit.xml

flake8:
    image: python:3.11
    stage: static_analysis
    rules:
        - if: $CI_PIPELINE_SOURCE == "push"
        - if: $CI_PIPELINE_SOURCE == "merge_request_event"
          when: never
    script:
        - cd backend
        - pip install flake8
        - flake8 --ignore=E501,F821,F811,W504

isort:
    image: python:3.11
    stage: static_analysis
    rules:
        - if: $CI_PIPELINE_SOURCE == "push"
        - if: $CI_PIPELINE_SOURCE == "merge_request_event"
          when: never
    script:
        - cd backend
        - pip install isort
        - isort . --check-only
